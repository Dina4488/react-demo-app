{"version":3,"sources":["component/NavBar/NavBar.js","component/ActorCard/ActorCard.js","model/ActorModel.js","pages/ActorsPage/ActorsPage.js","pages/HomePage/HomePage.js","component/MovieCard/MovieCard.js","component/SearchBox/SearchBox.js","model/MovieModel.js","pages/MoviePage/MoviePage.js","pages/NotFoundPage/NotFoundPage.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","ActorCard","actor","Col","xs","md","lg","Card","Img","variant","src","image","Body","Title","link","target","firstName","lastName","Text","getAge","ActorModel","birthday","this","today","Date","birthDate","age","getFullYear","m","getMonth","getDate","ActorsPage","params","actorsFiltered","sortedFilter","useState","actors","setActors","filterText","setFilterText","sortBy","setSortBy","useEffect","axios","get","process","concat","then","response","data","map","aSort","a","b","filter","toLowerCase","includes","sort","Container","Form","FormControl","type","value","onChange","e","placeholder","as","Row","Spinner","animation","HomePage","Carousel","Item","alt","Caption","Component","MovieCard","movie","poster","movieName","length","director","mainStars","SearchBox","searchText","onSearchChange","results","onResultSelected","Control","ListGroup","result","index","action","onClick","MovieModel","MoviePage","props","movies","setMovies","setSearchText","setResults","newSearchText","searchURL","title","resultIndex","movieId","moviePoster","poster_path","movieTimeURL","movieDetailsURL","getMovieTimeURL","getMovieDetailsURL","Promise","all","responses","runtime","crew","name","cast","NotFoundPage","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0979fbbf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, Nav} from 'react-bootstrap';\r\n\r\nfunction NavBar() {\r\n    return (       \r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#/\">Home</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">           \r\n            <Nav.Link href=\"#/actors\">Actors</Nav.Link> \r\n            <Nav.Link href=\"#/movies\">Movies</Nav.Link>\r\n          </Nav>\r\n          </Navbar.Collapse>\r\n          </Navbar>  \r\n        \r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Card, Col } from 'react-bootstrap';\r\nimport './ActorCard.css';\r\n\r\nfunction ActorCard({actor}) {\r\n    return (       \r\n        <Col xs={12} md={6} lg={3}>              \r\n                <Card className=\"class-card\">\r\n                    <Card.Img variant=\"top\" src={actor.image} />\r\n                    <Card.Body className=\"body\">\r\n                        <Card.Title className=\"fixName\">\r\n                            <a href={actor.link} target=\"_blank\">\r\n                                {`${actor.firstName}  ${actor.lastName}`}\r\n                            </a>\r\n                            </Card.Title>                            \r\n                        <Card.Text>\r\n                       {actor.getAge()}\r\n                        </Card.Text>                        \r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        \r\n    );\r\n}\r\n\r\nexport default ActorCard;","class ActorModel {\r\n    \r\n    constructor(firstName, lastName,birthday, image,link) {\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.birthday = birthday;\r\n        this.image = image;\r\n        this.link = link;\r\n    }\r\n\r\n    getAge() {       \r\n            var today = new Date();\r\n            var birthDate = new Date(this.birthday);\r\n            var age = today.getFullYear() - birthDate.getFullYear();\r\n            var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age--;\r\n            }\r\n            return age;\r\n        }\r\n  \r\n}\r\n\r\nexport default ActorModel;","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ActorCard from '../../component/ActorCard/ActorCard';\r\nimport ActorModel from '../../model/ActorModel';\r\nimport { Container, Row ,Spinner, Form ,FormControl } from 'react-bootstrap';\r\nimport NavBar from '../../component/NavBar/NavBar';\r\nimport './ActorsPage.css';\r\n\r\n\r\nfunction ActorsPage(params) {   \r\n    const [actors, setActors] = useState(\"\");\r\n    const [filterText, setFilterText] = useState(\"\");\r\n    const [sortBy, setSortBy]= useState(\"firstName\");\r\n\r\n    useEffect( () => {\r\n        const pathPre = process.env.PUBLIC_URL; \r\n        axios.get(pathPre.concat(\"/actors.json\")).then( response => {\r\n            setActors(response.data.map( actor => new ActorModel(actor.firstName, actor.lastName,\r\n                                        actor.birthday , actor.image, actor.link) ));\r\n        });\r\n       } , [] );\r\n     \r\n   \r\n       let actorsFiltered;\r\n       let sortedFilter;\r\n       if (actors)  {\r\n            actorsFiltered = actors.filter( (actor) => actor.firstName.toLowerCase().includes(filterText.toLowerCase()) || \r\n                                            actor.lastName.toLowerCase().includes(filterText.toLowerCase()));\r\n            \r\n            sortedFilter = \"\";\r\n\r\n            if (sortBy === \"firstName\"){\r\n                sortedFilter = actorsFiltered.sort( (a,b) => aSort(a.firstName.toLowerCase(),b.firstName.toLowerCase()));        \r\n            } else  if (sortBy === \"lastName\"){\r\n                sortedFilter = actorsFiltered.sort( (a,b) => aSort(a.lastName.toLowerCase(),b.lastName.toLowerCase()));        \r\n            } else if(sortBy === \"age\"){\r\n                sortedFilter = actorsFiltered.sort( (a,b) => a.getAge() - b.getAge() );        \r\n            }\r\n                \r\n            function aSort(a, b) {\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            };\r\n        }\r\n    // if(filterText !== \"\"){\r\n    //     actorRows = actorsFiltered.map(actor => <ActorCard actor={actor} />)\r\n    // } else {\r\n    //     actorRows = sortedFilter.map(actor => <ActorCard actor={actor} />)\r\n    // }    \r\n\r\n    return (\r\n      \r\n       <Container className=\"class-container\">\r\n            <h1> Actor Gallery</h1>        \r\n                <Form className=\"row filter\"> \r\n                <div className=\"col-lg-8 col-md-8 col-12 \" >                    \r\n                    <FormControl type=\"text\" \r\n                        value={filterText} onChange={(e) => setFilterText(e.target.value)} \r\n                        placeholder=\"Filter by a first or Last name\"\r\n                        />\r\n                </div>                    \r\n                <div className=\"col-lg-4 col-md-4 col-12\">\r\n                    <FormControl as=\"select\" value={sortBy} onChange={(e) => setSortBy(e.target.value)} >\r\n                        <option value=\"firstName\">First Name</option>\r\n                        <option value=\"lastName\">Last Name</option>\r\n                        <option value=\"age\">age</option>\r\n                    </FormControl>\r\n                </div>                 \r\n                </Form>           \r\n             <Row>\r\n                { actors ?\r\n                 \r\n                 sortedFilter.map(actor => <ActorCard actor={actor} />)\r\n                    :\r\n                    <Spinner animation=\"border\"/>   \r\n                }               \r\n            </Row>\r\n        </Container>\r\n        );\r\n    \r\n}\r\n\r\nexport default ActorsPage;","import React, { Component } from 'react';\r\nimport { Carousel, Container } from 'react-bootstrap';\r\n\r\nclass HomePage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <Container>\r\n                    <Carousel>\r\n                        <Carousel.Item>\r\n                            <img\r\n                            className=\"d-block w-100\"\r\n                            src=\"https://images.unsplash.com/photo-1542204165-65bf26472b9b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8bW92aWVzfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&w=1000&q=80\"                            \r\n                            alt=\"First slide\"\r\n                            />\r\n                            <Carousel.Caption>\r\n                            <h3>Find a Movie</h3>\r\n                            {/* <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p> */}\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                        <Carousel.Item>\r\n                            <img\r\n                            className=\"d-block w-100\"\r\n                            // src=\"https://image.shutterstock.com/image-vector/online-cinema-art-movie-watching-260nw-586719869.jpg\"\r\n                            // src=\"https://kids.hidabroot.org/wp-content/uploads/2020/07/movies.png\"\r\n                            src=\"https://media.gettyimages.com/photos/happy-latin-american-couple-at-the-movies-picture-id688782978?s=612x612\"\r\n                            alt=\"Second slide\"\r\n                            />\r\n\r\n                            <Carousel.Caption>\r\n                            <h3>Find An Actor</h3>\r\n                            {/* <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> */}\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                       \r\n                        </Carousel>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { Card, Col } from 'react-bootstrap';\r\nimport './MovieCard.css';\r\n\r\nfunction MovieCard({movie}) {\r\n    return (       \r\n        <Col xs={12} md={6} lg={3}>              \r\n                <Card className=\"class-movie\">\r\n                <Card.Img variant=\"top\" src={movie.poster} />                 \r\n                    <Card.Body className=\"body\">\r\n                        <Card.Title className=\"fixName\">\r\n                           {movie.movieName}                        \r\n                            </Card.Title>                            \r\n                        <Card.Text>\r\n                       <span>Movie length: {movie.length}</span>     \r\n                       <span>Director:  {movie.director}</span>\r\n                       <span> Main actors: {movie.mainStars}</span>\r\n                        </Card.Text>                        \r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        \r\n    );\r\n}\r\n\r\nexport default MovieCard;","import React from 'react';\r\nimport { Form, ListGroup } from 'react-bootstrap';\r\nimport './SearchBox.css'\r\n\r\n\r\nfunction SearchBox({placeholder, searchText, onSearchChange, results, onResultSelected}) {\r\n    return (\r\n        <div className=\"c-searchbox\">\r\n            <Form.Control type=\"text\" placeholder={placeholder} value={searchText} \r\n                onChange={e => onSearchChange(e.target.value)}/>\r\n            <ListGroup className=\"result-box\">\r\n                {results.map((result, index) => \r\n                    <ListGroup.Item action onClick={() => onResultSelected(index)}>\r\n                        {result}\r\n                    </ListGroup.Item>)}\r\n            </ListGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","class MovieModel {\r\n    \r\n    constructor(movieName, length, poster, director, mainStars) {      \r\n        this.movieName = movieName;\r\n        this.length = length;\r\n        this.poster = poster;\r\n        this.director = director;\r\n        this.mainStars = mainStars;\r\n    }    \r\n}\r\n\r\nexport default MovieModel;","import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport MovieCard from '../../component/MovieCard/MovieCard';\r\nimport SearchBox from '../../component/SearchBox/SearchBox';\r\nimport MovieModel from '../../model/MovieModel';\r\nimport './MoviePage.css';\r\n\r\nfunction MoviePage(props) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [results, setResults] = useState([]);    \r\n\r\n    function handleSearchChange(newSearchText) {\r\n        setSearchText(newSearchText);\r\n\r\n        if (newSearchText) {\r\n            // Here we should call TMDB\r\n            const searchURL = \"https://api.themoviedb.org/3/search/movie?api_key=4e214b891886fcf04facf7c227f3a489&page=1&include_adult=false&query=\" + newSearchText;\r\n            axios.get(searchURL).then(response => {\r\n                setResults(response.data.results);\r\n            });           \r\n        } else {\r\n            setResults([]);\r\n        }\r\n    }\r\n\r\n    function addMovie(resultIndex) {\r\n        // Adding the actor to the view        \r\n        \r\n        const movieId = results[resultIndex].id;\r\n        const movieName= results[resultIndex].title;        \r\n        const moviePoster = \"https://image.tmdb.org/t/p/w500/\" + results[resultIndex].poster_path;\r\n\r\n        const movieTimeURL = \"https://api.themoviedb.org/3/movie/\" + movieId +\"?api_key=4e214b891886fcf04facf7c227f3a489&page=1&include_adult=false\" ; \r\n        const movieDetailsURL = \"https://api.themoviedb.org/3/movie/\" + movieId +\"/credits?api_key=4e214b891886fcf04facf7c227f3a489&page=1&include_adult=false\" ; \r\n        \r\n        const getMovieTimeURL =  axios.get(movieTimeURL);\r\n        const getMovieDetailsURL = axios.get(movieDetailsURL);\r\n        \r\n        Promise.all( [getMovieTimeURL , getMovieDetailsURL]).then( responses => {           \r\n            setMovies(movies.concat(\r\n                new MovieModel(movieName,\r\n                               responses[0].data.runtime + \" min \",\r\n                               moviePoster,\r\n                               responses[1].data.crew[0].name,\r\n                               (responses[1].data.cast[0].name +  \" and  \" +\r\n                                responses[1].data.cast[1].name\r\n                                )                \r\n                            )));\r\n    });\r\n                  \r\n        // Cleaning up the SearchBox\r\n        setResults([]);\r\n        setSearchText(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-actors\">\r\n            <Container>            \r\n            <h1> Search a Movie</h1>        \r\n                <SearchBox\r\n                    placeholder=\"Search a Movie...\" \r\n                    searchText={searchText} \r\n                    onSearchChange={handleSearchChange}\r\n                    results={results.map(result => result.title)}\r\n                    onResultSelected={addMovie}/>\r\n                <Row>\r\n                    {movies.map(movie => <MovieCard movie={movie}/>)}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n\r\n}    \r\n\r\nexport default MoviePage;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nfunction NotFoundPage(props) {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <h1 className=\"display-1\">404</h1>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFoundPage;","\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport NavBar from './component/NavBar/NavBar';\nimport ActorsPage from './pages/ActorsPage/ActorsPage';\nimport HomePage from './pages/HomePage/HomePage';\nimport MoviePage from './pages/MoviePage/MoviePage';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\n\nfunction App() {\n  return (\n    <div>\n      <NavBar></NavBar>\n      <HashRouter>\n          <Switch>\n              <Route exact path=\"/\"><HomePage/></Route>\n              <Route exact path=\"/actors\"><ActorsPage/> </Route>\n              <Route exact path=\"/movies\"><MoviePage/></Route>\n              <Route path=\"/\"><NotFoundPage/></Route>\n          </Switch>\n      </HashRouter>   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}